{"ast":null,"code":"var _jsxFileName = \"/Users/bryanyan/app/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    title,\n    completed,\n    removeTodoItemProp\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(title);\n  const [tempValue, setTempValue] = useState(title);\n  const [completedState, setCompleted] = useState(completed);\n\n  const handleDivDoubleClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleInputKeyDown = e => {\n    const key = e.keyCode;\n\n    if (key == 13) {\n      setValue(tempValue);\n      setIsEditing(false);\n    } else if (key == 27) {\n      setTempValue(value);\n      setIsEditing(false);\n    }\n  };\n\n  const handleInputOnChange = e => {\n    setTempValue(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    setCompleted(oldCompleted => !oldCompleted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column seven wide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui input fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputOnChange,\n          onKeyDown: handleInputKeyDown,\n          autoFocus: true,\n          value: tempValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column five wide\",\n        onDoubleClick: handleDivDoubleClick,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ui header\" + (completedState ? \" green\" : \"\"),\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column one wide\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button circular icon\" + (completedState ? \" blue\" : \" green\"),\n          onClick: handleButtonClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"white check icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column one wide\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeTodoItemProp,\n          className: \"ui button circular icon red\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"white remove icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"P1mQ9trbemos1zdzVAnVmNM4gV4=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/bryanyan/app/src/components/Todo.js"],"names":["React","useState","Todo","title","completed","removeTodoItemProp","isEditing","setIsEditing","value","setValue","tempValue","setTempValue","completedState","setCompleted","handleDivDoubleClick","handleInputKeyDown","e","key","keyCode","handleInputOnChange","target","handleButtonClick","oldCompleted"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nconst Todo = ({title, completed, removeTodoItemProp}) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [value, setValue] = useState(title);\n    const [tempValue, setTempValue] = useState(title);\n    const [completedState, setCompleted] = useState(completed);\n    const handleDivDoubleClick = () => {\n        setIsEditing(true)\n    };\n    const handleInputKeyDown = (e) => {\n        const key = e.keyCode;\n\n        if(key == 13) {\n            setValue(tempValue);\n            setIsEditing(false);\n        }\n        else if (key == 27) {\n            setTempValue(value);\n            setIsEditing(false);\n        }\n    };\n\n    const handleInputOnChange = (e) => {\n        setTempValue(e.target.value);\n    };\n\n    const handleButtonClick = () => {\n        setCompleted((oldCompleted) => !oldCompleted);\n    };\n    return (\n        <div className = \"row\">\n        {isEditing ?\n        <div className = \"column seven wide\">\n        <div className = \"ui input fluid\" >\n            <input \n            onChange = {handleInputOnChange}\n            onKeyDown={handleInputKeyDown}\n            autoFocus = {true}\n            value = {tempValue}\n            />\n        </div>\n        </div>:\n            <>\n                <div className = \"column five wide\" onDoubleClick={handleDivDoubleClick}>\n                    <h2 className = {\"ui header\"+(completedState ? \" green\": \"\")}>{value}</h2>\n                </div>\n\n                <div className = \"column one wide\">\n                    <button \n                    className = {\"ui button circular icon\" + (completedState ? \" blue\" : \" green\")}\n                    onClick = {handleButtonClick}>\n                        <i className = \"white check icon\"></i>\n                    </button>\n                </div>\n                <div className = \"column one wide\">\n                    <button onClick = {removeTodoItemProp}\n                    className = \"ui button circular icon red\"><i className = \"white remove icon\"\n                    ></i></button>\n                </div>\n                </>\n}\n            </div>\n    );\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}